/*
  CONNECTED HOUSE DEVICE

 A simple web server that responds to specific Domotics API
 using an Arduino Ethernet shield.

 Circuit:
 * Ethernet shield attached to pins 10, 11, 12, 13
 * Digital outputs attached to pins 2 and 3

 created April 2015
 by Juan Salmerón Moya

 */

#include <SPI.h>
#include <Ethernet.h>

// Enter a MAC address and IP address for your controller below.
// The IP address will be dependent on your local network:
byte mac[] = {0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED};
IPAddress ip(192, 168, 1, 177);
//IPAddress ip(169, 254, 122, 85);


//Relay 1 attached to pin(2)
boolean relay1_level = LOW;
//Relay 2 attached to pin(3)
boolean relay2_level = LOW;

// Initialize the Ethernet server library
// with the IP address and port you want to use
// (port 80 is default for HTTP):
EthernetServer server(80);

void setup() {
  // Open serial communications and wait for port to open:
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo only
  }

  // start the Ethernet connection and the server:
  Ethernet.begin(mac, ip);
  server.begin();
  Serial.print("server is at ");
  Serial.println(Ethernet.localIP());
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
}

String getDevice(const String& request) {
  Serial.println("getDeviceString:");
  Serial.println(request);
  int indexFrom = request.indexOf("device");
  int indexTo = request.indexOf("------",indexFrom)-1;
  if (indexTo == -1) Serial.println("MECAGOENLAPUTA!");
  if (indexFrom == -1) Serial.println("MECAGOENLAPUTA2!");  
  String device = request.substring(indexFrom,indexTo);
  return device;
}

String getAction(String request) {
  int indexFrom = request.indexOf("action")+3;
  int indexTo = request.indexOf("------",indexFrom)-1;
  String action = request.substring(indexFrom,indexTo);
  return action;
}

String getValue(String request) {
  int indexFrom = request.indexOf("value")+3;
  int indexTo = request.indexOf("------",indexFrom)-1;
  String value = request.substring(indexFrom,indexTo);
  return value;
}

void loop() {
  // listen for incoming clients
  EthernetClient client = server.available();
  if (client) {
    Serial.println("new client");
    // an http request ends with a blank line
    boolean currentLineIsBlank = true;
    Serial.println(".................................");
    Serial.println("REQUEST:\n");
    
    // Get Request
    String request = "";
    while (client.connected()) {
      if (client.available()) {
        char c = client.read();
        //Serial.write(c);
        request.concat(c);
      }
      else {
        // send a standard http response header
        client.println("HTTP/1.1 200 OK");
        client.println("Content-Type: text/html");
        client.println("Connection: close");  // the connection will be closed after completion of the response
        client.println();
        client.println("<!DOCTYPE HTML>");
        client.println("</html>");
        
        Serial.println(".................................");
        // give the web browser time to receive the data
        delay(1);
        // close the connection:
        client.stop();
        Serial.println("client disconnected");
      }
    }
   
    // Print request
    Serial.println("request processed");
    Serial.print(request);
    
    // Process request
    if(request.indexOf("device") > -1) {
      Serial.println("DEVICE:");
      Serial.println(getDevice(request));
      if(request.indexOf("action") > -1) {
        Serial.println("ACTION:");
        Serial.println(getAction(request));  
        //if(request.indexOf("value") > -1) {} 
        //else Serial.println("request without value");                  
        //añadir mas adelante
      }
      else Serial.println("request without action");    
    }
    else Serial.println("request without device");

    //OLD
    //if(request.indexOf("startRelay1") > -1) digitalWrite(2, HIGH);
    //else if(request.indexOf("stopRelay1") > -1) digitalWrite(2, LOW);
    //else if(request.indexOf("startRelay2") > -1) digitalWrite(3, HIGH);
    //else if(request.indexOf("stopRelay2") > -1) digitalWrite(3, LOW);
    
    
  }
}
